{"version":3,"sources":["store/const.js","store/reducers/data.js","store/reducers/user.js","store/reducers/error.js","store/index.js","store/actions/user.js","utils/validate.js","store/actions/data.js","store/actions/error.js","components/FormElements/Title.js","components/FormElements/Desc.js","components/FormElements/Links.js","webservice/RestData.js","routes.js","webservice/ServerReq.js","components/NoteCreate.js","components/NoteDisplay/TreeEl.js","components/NoteDisplay/Sidebar.js","utils/work_with_notes.js","components/NoteDisplay/DisplayChildren.js","components/NoteDisplay/DisplayLinks.js","components/NoteDisplay/index.js","components/NoteEdit.js","components/Header.js","components/User/SignUpForm.js","components/User/SignInForm.js","components/User/UserSign.js","components/ErrorAlert.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["NOTE","WEB","initialState","currentMenu","notes","populate_note","state","action","payload","route","note_children","indexes","split","map","index","Number","note_rec","arr","len","length","children","token","userData","intialState","show_err","msg","rootReducer","combineReducers","user","type","localStorage","setItem","JSON","stringify","username","removeItem","note","error","response","data","message","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","log_in_user","log_out_user","validate","value","validationRules","valid","isValid","rule","isRequired","maxLen","matchPattern","isFormValid","formControls","exclude","deep_check","isFormValidDeep","isFormValidShallow","formValid","field","includes","Array","isArray","trim","push","valid_value","pattern","test","change_current_note","err","StyledTextField","styled","TextField","marginTop","Title","this","props","title","touch","label","inputProps","helperText","join","fullWidth","required","name","onChange","callback","React","Component","useStyles","makeStyles","root","Desc","classes","className","id","multiline","rowsMax","Links","CreateLinks","Button","data-testid","onClick","createLink","List","links","item","i","ListItem","key","GroupInputs","link","e","handleChange","desc","ListItemSecondaryAction","IconButton","edge","deleteLink","aria-label","width","get_data_from_links","Promise","allSettled","axios","method","url","headers","Cookie","req_to_link","then","results","links_res","result","status","doc","DOMParser","parseFromString","link_title","querySelector","getAttribute","image","resolve","routes","ServerReq","base_url","version_api","info","NoteCreate","goBack","history","target","formControl","updateEl","setState","filter","Date","now","handleChangeRoute","reason","parent","_id","submit","preventDefault","server","link_obj","head","saving","new_links","save_note","res","success","setTimeout","catch","notes_titles","place_len","get_notes_titles","StyledIcon","fontSize","style","color","green","StyledProgress","Box","padding","Autocomplete","ListboxProps","options","disabled","getOptionLabel","option","renderInput","params","variant","connect","dispatch","CircularProgress","marginLeft","CheckIcon","LabelItem","handleClick","route_l","hasOwnProperty","spinner","get_notes_children","console","log","textAlign","size","Sidebar","deep","TreeEl","TreeItem","nodeId","renderTree","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ChevronRight","onNodeSelect","Link","component","RouterLink","to","findNote","find_deep_note","find_shallow_note","DisplayChildren","ListItemText","primary","StyleLink","href","underline","StyledAccordion","defaultExpanded","StyledAccordionSummary","expandIcon","aria-controls","Typography","StyledAccordionDetails","StyleList","renderListItems","Accordion","boxShadow","AccordionSummary","AccordionDetails","textTransform","DisplayLinks","match","slice","LeftImg","Left","get_domain","StyledCard","renderLeft","Right","StyledHeader","disableTypography","rel","substring","StyledContent","renderCards","flexDirection","Card","display","CardContent","flexBasis","justifyContent","alignItems","CardMedia","flexGrow","CardHeader","mapDispatchToProps","save_notes","NoteDisplay","handleEdit","handleClose","show_snack","get_notes","props_obj","notesExist","currentMenuExist","withSidbar","Edit","Grid","container","spacing","Hidden","smDown","xs","NoteEdit","handleOpenModal","open_modal","handleCloseModal","handleDeleteNote","note_id","delete_spinner","delete_note","note_obj","links_obj","original_links_id","old_links","indexOf","update_note","update_spinner","Object","keys","get_state_links","replace","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Header","handleDrawer","drawer","logOut","renderUserInfoOrSignBtns","AppBar","position","Toolbar","mdUp","Menu","Drawer","SignUpForm","value1","value2","elem","error_msg","pass2","pass1","signUp","pass","show_spinner","sign_up","sign_up_user","renderTextField","obj","handler","SignInForm","element","logIn","log_in","UserSign","sign_in","overflow","margin","Slide","direction","in","mountOnEnter","unmountOnExit","onExited","renderButton","ErrorAlert","snackProps","autoHideDuration","anchorOrigin","vertical","horizontal","alertProps","severity","saverity","Snackbar","Alert","StyledPaper","Paper","hide_err","Main","Container","maxWidth","path","exact","App","Boolean","location","hostname","promises","all","p","getItem","parse","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc1a91df.chunk.js","sourcesContent":["export const NOTE = {\r\n    CREATE: 'CREATE_NOTE',\r\n    UPDATE:'UPDATE_NOTE',\r\n    DELETE: 'DELETE_NOTE',\r\n    CHANGE: 'CHANGE_CURRENT_MENU',\r\n    POPULATE: \"POPULATE_NOTE\"\r\n}\r\n\r\n\r\nexport const WEB = {\r\n    SIGN_UP: \"SIGN_UP\",\r\n    LOG_IN: \"LOG_IN\",\r\n    LOG_OUT: \"LOG_OUT\",\r\n\r\n    SAVE: \"SAVE_NOTES\",\r\n    SHOW_ERROR: \"SHOW_ERROR\",\r\n    HIDE_ERROR: 'HIDE_ERROR'\r\n}\r\n","import { NOTE, WEB } from '../const'\r\n\r\nconst initialState = {\r\n    currentMenu: '',\r\n    notes: []\r\n}\r\n\r\nexport function data(state = initialState, action){ \r\n    switch (action.type){\r\n        case WEB.SAVE:\r\n            return {...state, notes: action.payload}\r\n\r\n        case NOTE.POPULATE:\r\n            state.notes = [...state.notes]\r\n            return populate_note(state, action)\r\n\r\n        case NOTE.CHANGE:\r\n            return {\r\n                ...state,\r\n                currentMenu: action.payload\r\n            }\r\n        \r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nfunction populate_note(state, action) {\r\n    const { route, note_children } = action.payload\r\n    const indexes = route.split('-').map(index => Number(index))\r\n\r\n    function note_rec(arr, len) {\r\n        const index = indexes[len - 1]\r\n\r\n        if (indexes.length === len)\r\n            arr[index].children = note_children\r\n        else\r\n            return note_rec(arr[index].children, len + 1)\r\n\r\n    }\r\n\r\n    note_rec(state.notes, 1)\r\n\r\n    return {...state}\r\n}","import { WEB } from '../const'\r\n\r\nconst initialState = {\r\n    token: '',\r\n    userData: {}\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case WEB.LOG_IN:\r\n        case WEB.SIGN_UP:\r\n            localStorage.setItem(\"user\",JSON.stringify(action.payload))\r\n            return {\r\n                ...state, token: action.payload.token, userData: { username: action.payload.username }\r\n            }\r\n        case WEB.LOG_OUT:\r\n            localStorage.removeItem(\"user\")\r\n            return {\r\n                ...state, token: '', userData: {}\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import { WEB } from '../const'\r\n\r\nconst intialState = {\r\n    show_err: false,\r\n    msg: ''\r\n}\r\n\r\nexport function errorReducer(state = intialState, action){\r\n    switch(action.type){\r\n        case WEB.SHOW_ERROR:\r\n            return {show_err: true, msg: action.payload.response.data.error.message}\r\n        \r\n        case WEB.HIDE_ERROR:\r\n            return {show_err: false, msg: ''}\r\n            \r\n        default:\r\n            return {...state}\r\n    }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport { data } from './reducers/data'\r\nimport { userReducer } from './reducers/user'\r\nimport { errorReducer } from './reducers/error'\r\n\r\nconst rootReducer = combineReducers({user: userReducer, note: data, error: errorReducer})\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n) ","import { WEB } from '../const'\r\n\r\nexport function sign_up_user(user){\r\n    return {\r\n        type: WEB.SIGN_UP,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport function log_in_user(user){\r\n    return {\r\n        type: WEB.LOG_IN,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport function log_out_user(){\r\n    return {\r\n        type: WEB.LOG_OUT\r\n    }\r\n}\r\n","export function validate(value, validationRules) {\r\n    let valid = {\r\n        isValid: true,\r\n        msg: []\r\n    }\r\n\r\n    for (let rule in validationRules) {\r\n        switch (rule) {\r\n            case 'isRequired':\r\n                isRequired(value, valid)\r\n                break;\r\n\r\n            case 'maxLen':\r\n                maxLen(value, validationRules[rule], valid)\r\n                break;\r\n\r\n            case 'matchPattern':\r\n                matchPattern(value, validationRules[rule], valid)\r\n                break\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return valid\r\n}\r\n\r\nexport function validatePasswords(value1, value2, valid) {\r\n    if (value1 !== value2) {\r\n        valid.isValid = false\r\n        valid.msg.push('This password don\\'t equal to first password')\r\n    }\r\n    return valid\r\n}\r\n\r\nexport function isFormValid(formControls,exclude=[], deep_check = false) {\r\n    if (!deep_check) {\r\n        return isFormValidShallow(formControls, exclude)\r\n    }\r\n    return isFormValidDeep(formControls, exclude)\r\n\r\n}\r\n\r\nfunction isFormValidShallow(formControls, exclude){\r\n    let formValid = true\r\n    for (let field in formControls) {\r\n        if (!exclude.includes(field)) {\r\n            formValid = formControls[field].valid.isValid && formValid\r\n        }\r\n    }\r\n    return formValid\r\n}\r\n\r\n\r\nfunction isFormValidDeep(formControls, exclude){\r\n    let formValid = true\r\n    for (let field in formControls) {\r\n        if(!exclude.includes(field)){\r\n            if (Array.isArray(formControls[field])) {\r\n                for(let array_item of formControls[field]){\r\n                    formValid = isFormValidShallow(array_item, exclude) && formValid\r\n                }\r\n            }\r\n            else{\r\n                formValid = formControls[field].valid.isValid && formValid\r\n            }\r\n        }\r\n    }\r\n    return formValid\r\n}\r\n\r\n\r\n\r\nfunction isRequired(value, valid) {\r\n    if (value.trim() === '') {\r\n        valid.isValid = false\r\n        valid.msg.push('Empty Field')\r\n    }\r\n}\r\n\r\nfunction maxLen(value, valid_value, valid) {\r\n    if (value.length > valid_value) {\r\n        valid.isValid = false\r\n        valid.msg.push(`Field length is more than ${valid_value} characters`)\r\n    }\r\n}\r\n\r\nfunction matchPattern(value, pattern, valid) {\r\n    if (!pattern.test(value)) {\r\n        valid.isValid = false\r\n        valid.msg.push('This value isn\\'t a link')\r\n    }\r\n}\r\n\r\n","import { NOTE, WEB } from \"../const\"\r\n\r\n\r\nexport function populate_note(note_children, route){\r\n    return {\r\n        type: NOTE.POPULATE,\r\n        payload:{\r\n            note_children,\r\n            route\r\n        }\r\n    }\r\n}\r\n\r\nexport function save_notes(notes){\r\n    return {\r\n        type: WEB.SAVE,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport function change_current_note(route){\r\n    return {\r\n        type: NOTE.CHANGE,\r\n        payload: route\r\n    }\r\n}","import { WEB } from '../const'\r\n\r\nexport function show_err(err){\r\n    return {\r\n        type: WEB.SHOW_ERROR,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport function hide_err(){\r\n    return {\r\n        type: WEB.HIDE_ERROR,\r\n    }\r\n}","import React from 'react'\r\nimport { styled } from '@material-ui/styles'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nconst StyledTextField = styled(TextField)({\r\n    marginTop: '10px'\r\n})\r\n\r\n\r\nexport class Title extends React.Component {\r\n\r\n    render() {\r\n        const { valid, touch, value } = this.props.title\r\n        return <StyledTextField\r\n            value={value}\r\n            label='Title'\r\n            inputProps={{'data-testid':'edit-title'}}\r\n            error={touch && !valid.isValid}\r\n            helperText={valid.msg.join(', ')}\r\n            fullWidth\r\n            required\r\n            name='title'\r\n            onChange={this.props.callback} />\r\n    }\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: '10px'\r\n    }\r\n})\r\n\r\nexport function Desc(props){\r\n    const classes = useStyles()\r\n    return <TextField className={classes.root}\r\n                        id=\"standard-multiline-flexible\"\r\n                        label='Description' \r\n                        name='desc'\r\n                        fullWidth\r\n                        multiline\r\n                        value={props.value}\r\n                        rowsMax={4}\r\n                        onChange={props.callback}/>\r\n}\r\n","import React, { Component } from 'react'\r\nimport { styled } from '@material-ui/styles'\r\nimport {\r\n    List, ListItem,\r\n    ListItemSecondaryAction,\r\n    Button, TextField, IconButton\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nexport class Links extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <CreateLinks>\r\n                <Button data-testid={'btn-create-link'} onClick={this.props.createLink}>Create New Link</Button>\r\n                <List data-testid={'edit-links'}>\r\n                    {this.props.links.map((item, i) => (\r\n                        <ListItem key={i}>\r\n                            <GroupInputs>\r\n                                <TextField name='link'\r\n                                    label='Link'\r\n                                    value={item.link.value}\r\n                                    error={item.link.touch && !item.link.valid.isValid}\r\n                                    helperText={item.link.valid.msg.join(', ')}\r\n                                    inputProps={{'data-testid':`edit-link-${i}`}}\r\n                                    required\r\n                                    fullWidth\r\n                                    onChange={(e) => this.props.handleChange(e, i, 'link')} />\r\n                                <TextField name='desc'\r\n                                    label='Description'\r\n                                    fullWidth\r\n                                    value={item.desc.value}\r\n                                    onChange={(e) => this.props.handleChange(e, i, 'link')}\r\n                                    multiline />\r\n                            </GroupInputs>\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" onClick={() => {\r\n                                    this.props.deleteLink(item)\r\n                                }} aria-label=\"delete\">\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </CreateLinks>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst CreateLinks = styled('div')({\r\n    marginTop: \"20px\"\r\n})\r\n\r\nconst GroupInputs = styled('div')({\r\n    width: '98%'\r\n})\r\n","import axios from 'axios'\r\n\r\nexport function get_data_from_links(links) {\r\n  return Promise.allSettled(links.map(link => req_to_link(link.link)))\r\n    .then(results => {\r\n      let links_res = results.map((result, i) => {\r\n        try {\r\n          if (result.status === \"fulfilled\") {\r\n            let domparser = new DOMParser()\r\n            let doc = domparser.parseFromString(result.value.data, 'text/html')\r\n            let link_title = doc.querySelector('meta[property=\"og:title\"]').getAttribute('content')\r\n            let image = doc.querySelector('meta[property=\"og:image\"]').getAttribute('content')\r\n            return { ...links[i], link_title, image }\r\n          }\r\n          if (result.status === \"rejected\") {\r\n            return links[i]\r\n          }\r\n        } catch (error) {\r\n          return links[i]\r\n        }\r\n      })\r\n\r\n      return Promise.resolve(links_res)\r\n    });\r\n}\r\n\r\n\r\nfunction req_to_link(link) {\r\n  return axios({\r\n    method: 'get',\r\n    url: 'https://cors-anywhere.herokuapp.com/' + link,\r\n    headers:{\r\n      Cookie: 'SameSite=None; Secure'\r\n    }\r\n  })\r\n}","export const routes = {\r\n    create: '/create',\r\n    edit: '/edit',\r\n    home: '/home',\r\n    sign_up: '/sign_up',\r\n    sign_in: '/sing_in',\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nexport class ServerReq {\r\n    constructor(base_url = \"http://localhost:8000\", version_api = 1) {\r\n        this.base_url = base_url\r\n        this.version_api = version_api\r\n    }\r\n\r\n    sign_up(user) {\r\n        return axios({\r\n            method: 'post',\r\n            url: `${this.base_url}/api/v${this.version_api}/users/`,\r\n            data: user\r\n        })\r\n    }\r\n\r\n    log_in(user) {\r\n        return axios({\r\n            method: 'post',\r\n            url: `${this.base_url}/api/v${this.version_api}/users/login`,\r\n            data: user\r\n        })\r\n    }\r\n\r\n    get_notes(token) {\r\n        return axios({\r\n            method: 'get',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            }\r\n        })\r\n    }\r\n\r\n    get_notes_titles(token) {\r\n        return axios({\r\n            method: 'get',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/titles/`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            }\r\n        })\r\n    }\r\n\r\n    get_notes_children(token, id) {\r\n        return axios({\r\n            method: 'get',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/${id}`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            }\r\n        })\r\n    }\r\n\r\n    save_note(info, token) {\r\n        return axios({\r\n            method: 'post',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            },\r\n            data: info\r\n        })\r\n    }\r\n\r\n    delete_note(id, token) {\r\n        return axios({\r\n            method: 'delete',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/${id}`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            },\r\n        })\r\n    }\r\n\r\n    update_note(note, token) {\r\n        return axios({\r\n            method: 'put',\r\n            url: `${this.base_url}/api/v${this.version_api}/notes/`,\r\n            headers: {\r\n                'Authorization': \"Bearer \" + token\r\n            },\r\n            data: note\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Button, TextField, CircularProgress, Box\r\n} from '@material-ui/core'\r\n\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { styled } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { validate, isFormValid } from '../utils/validate'\r\nimport { change_current_note } from '../store/actions/data'\r\nimport { show_err } from '../store/actions/error'\r\nimport { Title } from './FormElements/Title'\r\nimport { Desc } from './FormElements/Desc'\r\nimport { Links } from './FormElements/Links'\r\nimport { get_data_from_links } from '../webservice/RestData'\r\nimport { routes } from '../routes'\r\nimport { ServerReq } from '../webservice/ServerReq'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notes: state.note.notes,\r\n    token: state.user.token\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    change_current_note: ()=>dispatch(change_current_note('')),\r\n    show_err: (err) =>dispatch(show_err(err))\r\n})\r\n\r\nexport class NoteCreate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notes_titles: [],\r\n            formValid: false,\r\n            formControl: {\r\n                title: {\r\n                    value: '',\r\n                    valid: { isValid: false, msg: [] },\r\n                    touch: false,\r\n                    validationRules: {\r\n                        maxLen: 50,\r\n                        isRequired: true\r\n                    }\r\n                },\r\n                desc: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: { isValid: true, msg: [] },\r\n                    validationRules: {}\r\n                },\r\n                links: [],\r\n            },\r\n            parent: '',\r\n            saving: false,\r\n            success: false,\r\n            place_len: this.props.notes.length\r\n        }\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    handleChange = (e, index = 0, type = 'note') => {\r\n\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n\r\n        if (type === 'note') {\r\n            const updateEl = {\r\n                ...formControl[name]\r\n            }\r\n            updateEl.value = value\r\n            updateEl.touch = true\r\n            updateEl.valid = validate(value, updateEl.validationRules)\r\n            formControl[name] = updateEl\r\n\r\n        }\r\n        else {\r\n            const updateEl = {\r\n                ...formControl.links[index][name]\r\n            }\r\n            updateEl.value = value\r\n            updateEl.touch = true\r\n            updateEl.valid = validate(value, updateEl.validationRules)\r\n            formControl.links[index][name] = updateEl\r\n        }\r\n\r\n        this.setState({\r\n            formValid: isFormValid(formControl, ['_id', 'link_title', 'image'], true),\r\n            formControl\r\n        })\r\n    }\r\n\r\n    deleteLink = (link) => {\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n        formControl.links = formControl.links.filter((item) => item.id !== link.id)\r\n\r\n        this.setState({\r\n            formControl,\r\n            formValid: isFormValid(formControl, ['_id', 'link_title', 'image'], true)\r\n        })\r\n    }\r\n\r\n    createLink = () => {\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n\r\n        formControl.links = [\r\n            ...this.state.formControl.links,\r\n            {\r\n                id: Date.now(),\r\n                link: {\r\n                    value: '',\r\n                    valid: { isValid: false, msg: [] },\r\n                    touch: false,\r\n                    validationRules: {\r\n                        isRequired: true,\r\n                        matchPattern: /[-a-zA-Z0-9@:%_+.~#?&/=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&/=]*)?/gi\r\n                    }\r\n                },\r\n                desc: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: { isValid: true, msg: [] },\r\n                    validationRules: {\r\n\r\n                    }\r\n                },\r\n                link_title: '',\r\n                image: ''\r\n            }\r\n        ]\r\n\r\n        this.setState({\r\n            formValid: false,\r\n            formControl\r\n        })\r\n    }\r\n\r\n    handleChangeRoute = (e, value, reason) => {\r\n        if (reason === 'select-option') {\r\n            this.setState({\r\n                parent: value._id,\r\n            })\r\n        }\r\n        else if (reason === 'clear') {\r\n            this.setState({\r\n                parent: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        const { formControl, parent } = this.state\r\n        const show_err = this.props.show_err\r\n        const token = this.props.token\r\n        const server = new ServerReq()\r\n        const note = {\r\n            title: formControl.title.value,\r\n            desc: formControl.desc.value,\r\n            links: formControl.links.map(link_obj => ({\r\n                id: link_obj.id,\r\n                link: link_obj.link.value,\r\n                desc: link_obj.desc.value,\r\n                link_title: link_obj.link.value,\r\n                image: \"\"\r\n            })),\r\n            head: true,\r\n            children: [],\r\n        }\r\n\r\n        if(parent){\r\n            note.parent = parent\r\n            note.head = false\r\n        }\r\n\r\n        this.setState({\r\n            saving: true\r\n        })\r\n\r\n        get_data_from_links(note.links)\r\n            .then(new_links => {\r\n                note.links = new_links                \r\n                return server.save_note(note, token)\r\n            })\r\n            .then(res =>{\r\n                this.setState({\r\n                    saving: false,\r\n                    success: true\r\n                })\r\n                this.props.change_current_note()\r\n                setTimeout(()=>this.props.history.push(routes.home),1000)\r\n            })\r\n            .catch(err => show_err(err))\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = this.props.token\r\n        const show_err = this.show_err\r\n        const server = new ServerReq()\r\n\r\n        server\r\n            .get_notes_titles(token)\r\n            .then(res => {\r\n                this.setState({notes_titles: res.data})\r\n            })\r\n            .catch(err => show_err(err))\r\n    }\r\n\r\n    render() {\r\n        const { title, desc, links } = this.state.formControl\r\n        const { success, saving } = this.state\r\n        if (saving || success) {\r\n            return <div className=\"note-create\">\r\n                {success && <StyledIcon fontSize='large' style={{ color: green[500] }} />}\r\n                {saving && <StyledProgress />}\r\n            </div>\r\n        }\r\n        return (\r\n            <Box padding={1} data-testid={'note-create'} className='note-create'>\r\n                <form>\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        ListboxProps={{ 'data-testid': 'auto-list' }}\r\n                        options={this.state.notes_titles}\r\n                        data-testid='autocomplete'\r\n                        disabled={this.state.notes_titles.length > 0 ? false : true}\r\n                        getOptionLabel={(option) => option.title}\r\n                        renderInput={(params) => <TextField {...params} label=\"Parent Node\" variant=\"outlined\" />}\r\n                        onChange={this.handleChangeRoute}\r\n                    />\r\n                    <Title title={title} callback={this.handleChange} />\r\n                    <Desc value={desc.value} callback={this.handleChange} />\r\n                    <Links createLink={this.createLink}\r\n                        links={links}\r\n                        handleChange={this.handleChange}\r\n                        deleteLink={this.deleteLink} />\r\n\r\n                    <Button data-testid='btn-cancel' onClick={this.goBack}>Cancel</Button>\r\n                    <Button data-testid='btn-create' onClick={this.submit} disabled={!this.state.formValid} type='submit'>save</Button>\r\n                </form>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteCreate)\r\n\r\nconst StyledProgress = styled(CircularProgress)({\r\n    marginLeft: 'calc(50% - 20px)'\r\n})\r\n\r\nconst StyledIcon = styled(CheckIcon)({\r\n    marginLeft: 'calc(50% - 20px)'\r\n})\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Box, CircularProgress } from '@material-ui/core'\r\nimport { ServerReq } from '../../webservice/ServerReq'\r\nimport { populate_note } from '../../store/actions/data'\r\n\r\nexport class LabelItem extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            spinner: false\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const { item, route_l, token, populate_note } = this.props\r\n\r\n        if (item.hasOwnProperty('children') && item.children.length > 0 && typeof item.children[0] === 'string') {\r\n            const server = new ServerReq()\r\n            this.setState({spinner: true})\r\n\r\n            server\r\n                .get_notes_children(token, item._id)\r\n                .then(res =>{\r\n                    this.setState({spinner: false},()=>populate_note(res.data, route_l))\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { spinner } = this.state\r\n        const { children } = this.props\r\n        if (spinner) {\r\n            return (\r\n                <Box textAlign='center'>\r\n                    <CircularProgress size={25} />\r\n                </Box>\r\n            )\r\n        }\r\n        return (\r\n            <Box onClick={this.handleClick}>\r\n                {children}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=>({token: state.user.token}),{populate_note})(LabelItem)\r\n","import React, { Component } from 'react'\r\nimport { Button, Link } from '@material-ui/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { TreeItem, TreeView } from '@material-ui/lab'\r\nimport { ExpandMore, ChevronRight } from '@material-ui/icons'\r\nimport { routes } from '../../routes'\r\nimport TreeEl from './TreeEl'\r\n\r\nexport class Sidebar extends Component {\r\n\r\n    renderTree(notes, route = '', deep = 0) {\r\n        return notes.map((item, i) => {\r\n            let route_l = \"\";\r\n            if (deep === 0) {\r\n                route_l = `${i}`;\r\n            } else {\r\n                route_l = `${route}-${i}`;\r\n            }\r\n            return (\r\n                <TreeEl key={`${item._id}-${i}`} item={item} route_l={route_l}>\r\n                    <TreeItem nodeId={route_l} label={item.title}>\r\n                        {item.hasOwnProperty(\"children\") && item.children.length > 0 ? this.renderTree(item.children, route_l, deep + 1) : null}\r\n                    </TreeItem>\r\n                </TreeEl>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <TreeView\r\n                    defaultCollapseIcon={<ExpandMore />}\r\n                    defaultExpandIcon={<ChevronRight />}\r\n                    onNodeSelect={(e, value) => this.props.change_current_note(value)}\r\n                >\r\n                    {this.renderTree(this.props.notes)}\r\n                </TreeView>\r\n                <Button>\r\n                    <Link color='textPrimary' component={RouterLink} to={routes.create}>\r\n                        + Create Note\r\n                    </Link>\r\n                </Button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n","export function findNote(notes, route) {\r\n  if (!notes.length) {\r\n    return {}\r\n  }\r\n  if (route.length > 1) {\r\n    return find_deep_note(notes, route)\r\n  }\r\n  return find_shallow_note(notes, route)\r\n}\r\n\r\nfunction find_shallow_note(notes, route) {\r\n  const index = Number(route)\r\n  return notes[index]\r\n}\r\n\r\nfunction find_deep_note(notes, route) {\r\n  const indexes = route.split('-').map(index => Number(index))\r\n\r\n  function note_rec(arr, len) {\r\n    const index = indexes[len - 1]\r\n\r\n    if (indexes.length === len)\r\n      return arr[index]\r\n    else\r\n      return note_rec(arr[index].children, len + 1)\r\n\r\n  }\r\n\r\n  return note_rec(notes, 1)\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography, List,\r\n    ListItem, ListItemText,\r\n    Link\r\n} from '@material-ui/core'\r\nimport { styled } from '@material-ui/styles'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nexport class DisplayChildren extends Component {\r\n    renderListItems() {\r\n        const { note_children, change_current_note, currentMenu } = this.props\r\n        return note_children.map((item, i) => (\r\n            <ListItem key={i}>\r\n                <ListItemText primary={<StyleLink href='#'\r\n                    underline='none'\r\n                    onClick={() => change_current_note(`${currentMenu}-${i}`)} variant='body1'>\r\n                    {i + 1}. {item.title}\r\n                </StyleLink>} />\r\n            </ListItem>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        const note_children = this.props.note_children\r\n        if (!note_children.length) {\r\n            return null\r\n        }\r\n        return (\r\n            <StyledAccordion defaultExpanded={true}>\r\n                <StyledAccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography variant='h6'>Notes</Typography>\r\n                </StyledAccordionSummary>\r\n                <StyledAccordionDetails>\r\n                    <StyleList>\r\n                        {this.renderListItems()}\r\n                    </StyleList>\r\n                </StyledAccordionDetails>\r\n            </StyledAccordion>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledAccordion = styled(Accordion)({\r\n    boxShadow: 'none',\r\n    marginTop: '10px'\r\n})\r\n\r\nconst StyledAccordionSummary = styled(AccordionSummary)({\r\n    padding: '0',\r\n})\r\n\r\nconst StyledAccordionDetails = styled(AccordionDetails)({\r\n    padding: '8px 0 16px',\r\n})\r\n\r\nconst StyleList = styled(List)({\r\n    width: '30%'\r\n})\r\n\r\nconst StyleLink = styled(Link)({\r\n    textTransform: 'capitalize'\r\n})","import React, { Component } from 'react'\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography, Card,\r\n    CardMedia, CardHeader,\r\n    CardContent, Link\r\n} from '@material-ui/core'\r\nimport { styled } from '@material-ui/styles'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nexport class DisplayLinks extends Component {\r\n\r\n    get_domain(link) {\r\n        return link.match(/\\/\\w+/)[0].slice(1)\r\n    }\r\n\r\n    renderLeft(item) {\r\n        const imgExsist = item.image.length > 0\r\n        if (imgExsist) {\r\n            return <LeftImg image={item.image} />\r\n        }\r\n        return <Left><Typography variant='h6'>{this.get_domain(item.link)}</Typography></Left>\r\n    }\r\n\r\n    renderCards() {\r\n        return this.props.links.map((item, i) => (\r\n            <StyledCard key={i}>\r\n                {this.renderLeft(item)}\r\n                <Right>\r\n                    <StyledHeader disableTypography title={(\r\n                        <Link variant='h6' rel=\"noopener\" href={item.link} target='_blank' underline='none'>\r\n                            {item.link_title.substring(0, 45)}\r\n                        </Link>\r\n                    )} />\r\n                    <StyledContent>\r\n                        <Typography variant='body2'>\r\n                            {item.desc}\r\n                        </Typography>\r\n                    </StyledContent>\r\n                </Right>\r\n            </StyledCard>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        const links = this.props.links\r\n        if (!links.length) {\r\n            return null\r\n        }\r\n        return (\r\n            <StyledAccordion defaultExpanded={true}>\r\n                <StyledAccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography variant='h6'>Links</Typography>\r\n                </StyledAccordionSummary>\r\n                <StyledAccordionDetails>\r\n                    {this.renderCards()}\r\n                </StyledAccordionDetails>\r\n            </StyledAccordion>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nlet StyledAccordion = styled(Accordion)({\r\n    boxShadow: 'none',\r\n    marginTop: '10px'\r\n})\r\n\r\nlet StyledAccordionSummary = styled(AccordionSummary)({\r\n    padding: '0',\r\n})\r\n\r\nlet StyledAccordionDetails = styled(AccordionDetails)({\r\n    flexDirection: 'column',\r\n    padding: '8px 0 16px',\r\n})\r\n\r\nconst StyledCard = styled(Card)({\r\n    display: 'flex',\r\n    width: '100%',\r\n    marginTop: 7\r\n})\r\n\r\nconst Left = styled(CardContent)({\r\n    flexBasis: '20%',\r\n    padding: '5px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n})\r\n\r\nconst LeftImg = styled(CardMedia)({\r\n    flexBasis: '15%',\r\n})\r\n\r\nconst Right = styled(CardContent)({\r\n    flexGrow: '1',\r\n    padding: '5px !important',\r\n})\r\n\r\nconst StyledHeader = styled(CardHeader)({\r\n    padding: 0\r\n})\r\n\r\nconst StyledContent = styled(CardContent)({\r\n    padding: '5px 0 0 0 !important'\r\n})\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Button, Typography,\r\n    Box, Grid, Hidden,\r\n    CircularProgress,\r\n} from '@material-ui/core'\r\nimport { Edit } from '@material-ui/icons'\r\nimport { Sidebar } from './Sidebar'\r\nimport { routes } from '../../routes'\r\nimport { findNote } from '../../utils/work_with_notes'\r\nimport { DisplayChildren } from './DisplayChildren'\r\nimport { DisplayLinks } from './DisplayLinks'\r\nimport { change_current_note, save_notes } from '../../store/actions/data'\r\nimport { log_out_user } from '../../store/actions/user'\r\nimport { show_err } from '../../store/actions/error'\r\nimport { ServerReq } from '../../webservice/ServerReq'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentMenu: state.note.currentMenu,\r\n    notes: state.note.notes,\r\n    token: state.user.token,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    change_current_note,\r\n    save_notes,\r\n    log_out_user,\r\n    show_err\r\n}\r\n\r\nexport class NoteDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            spinner: true,\r\n            show_snack: false,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    handleEdit = () => {\r\n        const { history, currentMenu } = this.props\r\n        history.push(`${routes.edit}/${currentMenu}`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const server = new ServerReq()\r\n        const { token, save_notes, log_out_user } = this.props\r\n\r\n        server\r\n            .get_notes(token)\r\n            .then(res => {\r\n                save_notes(res.data)\r\n                this.setState({ spinner: false })\r\n            })\r\n            .catch(err => {\r\n                const data = err.response.data\r\n                show_err(err)\r\n                if (data.error.name === 'TokenExpiredError') {\r\n                    setTimeout(() => log_out_user(), 4000)\r\n                }\r\n            })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show_snack: false, error: '' })\r\n    }\r\n\r\n    render() {\r\n        const { spinner } = this.state\r\n\r\n        if (spinner) {\r\n            return <Box display='flex' justifyContent='center'>\r\n                <CircularProgress />\r\n            </Box>\r\n        }\r\n        const { currentMenu, notes, change_current_note } = this.props\r\n\r\n        const props_obj = {\r\n            notes,\r\n            currentMenu,\r\n            change_current_note,\r\n        }\r\n        const notesExist = props_obj.notes.length > 0\r\n        const currentMenuExist = props_obj.currentMenu.length > 0\r\n\r\n        if (!notesExist) {\r\n            return withSidbar((\r\n                <div className='display'>\r\n                    <Typography variant='subtitle1'>\r\n                        You don't have any notes, but you can create\r\n                        new if you press 'create note'\r\n                    </Typography>\r\n                </div>\r\n            ), props_obj)\r\n        }\r\n        if (notesExist && !currentMenuExist) {\r\n            return withSidbar((<div className='display'>\r\n                <Typography variant='subtitle1'>\r\n                    Choose note that you want to see\r\n                </Typography>\r\n            </div>), props_obj)\r\n\r\n        }\r\n\r\n        const note = findNote(props_obj.notes, props_obj.currentMenu)\r\n        return withSidbar((<div className='display'>\r\n            <div data-testid='note' className=\"note\">\r\n                <Box display=\"flex\" alignItems='center' justifyContent=\"space-between\">\r\n                    <Typography variant='h5'>{note.title}</Typography>\r\n                    <Button id='edit-btn' onClick={this.handleEdit}><Edit /></Button>\r\n                </Box>\r\n                <Typography variant='body1'>{note.desc}</Typography>\r\n                <DisplayChildren currentMenu={props_obj.currentMenu} change_current_note={props_obj.change_current_note} note_children={note.children} />\r\n                <DisplayLinks links={note.links} />\r\n            </div>\r\n        </div>), props_obj)\r\n    }\r\n}\r\n\r\nfunction withSidbar(component, props) {\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Hidden smDown>\r\n                <Grid item xs={2}>\r\n                    <Sidebar {...props} />\r\n                </Grid>\r\n            </Hidden>\r\n            <Grid item xs={true}>\r\n                <Box padding={1}>\r\n                    {component}\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDisplay)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Button, CircularProgress,\r\n    Dialog, DialogActions,\r\n    DialogContentText, DialogTitle,\r\n    DialogContent, Box\r\n} from '@material-ui/core'\r\nimport { styled } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { validate, isFormValid } from '../utils/validate'\r\nimport { findNote } from '../utils/work_with_notes'\r\nimport { change_current_note } from '../store/actions/data'\r\nimport { show_err } from '../store/actions/error'\r\nimport { Title } from './FormElements/Title'\r\nimport { Desc } from './FormElements/Desc'\r\nimport { Links } from './FormElements/Links'\r\nimport { get_data_from_links } from '../webservice/RestData'\r\nimport { routes } from '../routes'\r\nimport { ServerReq } from '../webservice/ServerReq'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notes: state.note.notes,\r\n    token: state.user.token\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    change_current_note: () => dispatch(change_current_note(\"\")),\r\n    show_err: (err) => dispatch(show_err(err))\r\n})\r\n\r\nfunction get_state_links(note) {\r\n    if (!Object.keys(note).length) {\r\n        return []\r\n    }\r\n    return note.links.map(item => ({\r\n        id: item.id,\r\n        link: {\r\n            value: item.link,\r\n            valid: { isValid: true, msg: [] },\r\n            touch: false,\r\n            validationRules: {\r\n                isRequired: true,\r\n                matchPattern: /[-a-zA-Z0-9@:%_+.~#?&/=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&/=]*)?/gi\r\n            }\r\n        },\r\n        desc: {\r\n            value: item.desc,\r\n            touch: false,\r\n            valid: { isValid: true, msg: [] },\r\n            validationRules: {\r\n\r\n            }\r\n        },\r\n        link_title: item.link_title,\r\n        image: item.image\r\n    }))\r\n}\r\n\r\n\r\nexport class NoteEdit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValid: true,\r\n            formControl: {\r\n                title: {\r\n                    value: '',\r\n                    valid: { isValid: true, msg: [] },\r\n                    touch: false,\r\n                    validationRules: {\r\n                        maxLen: 50,\r\n                        isRequired: true\r\n                    }\r\n                },\r\n                desc: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: { isValid: true, msg: [] },\r\n                    validationRules: {}\r\n                },\r\n                links: [],\r\n            },\r\n            route: this.props.match.params.route,\r\n            saving: false,\r\n            success: false,\r\n            note: {},\r\n            open_modal: false,\r\n            delete_spinner: false,\r\n            update_spinner: false,\r\n        }\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    handleChange = (e, index = 0, type = 'note') => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n\r\n        if (type === 'note') {\r\n            const updateEl = {\r\n                ...formControl[name]\r\n            }\r\n            updateEl.value = value\r\n            updateEl.touch = true\r\n            updateEl.valid = validate(value, updateEl.validationRules)\r\n            formControl[name] = updateEl\r\n\r\n        }\r\n        else {\r\n            const updateEl = {\r\n                ...formControl.links[index][name]\r\n            }\r\n            updateEl.value = value\r\n            updateEl.touch = true\r\n            updateEl.valid = validate(value, updateEl.validationRules)\r\n            formControl.links[index][name] = updateEl\r\n        }\r\n\r\n        this.setState({\r\n            formValid: isFormValid(formControl, ['children', '_id', 'image', 'link_title'], true),\r\n            formControl\r\n        })\r\n    }\r\n\r\n    deleteLink = (link) => {\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n        formControl.links = formControl.links.filter((item) => item.id !== link.id)\r\n\r\n        this.setState({\r\n            formControl,\r\n            formValid: isFormValid(formControl, ['children', '_id', 'image', 'link_title'], true)\r\n        })\r\n    }\r\n\r\n    createLink = () => {\r\n        const formControl = {\r\n            ...this.state.formControl\r\n        }\r\n\r\n        formControl.links = [\r\n            ...this.state.formControl.links,\r\n            {\r\n                id: Date.now(),\r\n                link: {\r\n                    value: '',\r\n                    valid: { isValid: false, msg: [] },\r\n                    touch: false,\r\n                    validationRules: {\r\n                        isRequired: true,\r\n                        matchPattern: /[-a-zA-Z0-9@:%_+.~#?&/=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_+.~#?&/=]*)?/gi\r\n                    }\r\n                },\r\n                desc: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: { isValid: true, msg: [] },\r\n                    validationRules: {\r\n\r\n                    }\r\n                },\r\n                link_title: '',\r\n                image: ''\r\n            }\r\n        ]\r\n\r\n        this.setState({\r\n            formValid: false,\r\n            formControl\r\n        })\r\n    }\r\n\r\n    handleOpenModal = () => {\r\n        this.setState({ open_modal: true })\r\n    }\r\n\r\n    handleCloseModal = () => {\r\n        this.setState({ open_modal: false })\r\n    }\r\n\r\n\r\n    handleDeleteNote = () => {\r\n        const server = new ServerReq()\r\n        const note_id = this.state.note._id\r\n        const token = this.props.token\r\n        const show_err = this.props.show_err\r\n\r\n        this.setState({ delete_spinner: true, open_modal: false })\r\n\r\n        server\r\n            .delete_note(note_id, token)\r\n            .then(res => {\r\n                this.setState({ delete_spinner: false })\r\n                this.props.change_current_note()\r\n                this.props.history.push(routes.home)\r\n            })\r\n            .catch(err => show_err(err))\r\n\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        const { formControl, note } = this.state\r\n        const { token, change_current_note, show_err } = this.props\r\n\r\n        const note_obj = {\r\n            _id: note._id,\r\n            title: formControl.title.value,\r\n            desc: formControl.desc.value,\r\n        }\r\n        const links_obj = formControl.links.map(link_obj => ({\r\n            id: link_obj.id,\r\n            link: link_obj.link.value,\r\n            desc: link_obj.desc.value,\r\n            link_title: link_obj.link_title,\r\n            image: link_obj.image\r\n        }))\r\n        const original_links_id = note.links.map(item => item.id)\r\n        const new_links = []\r\n        const old_links = []\r\n\r\n        for (let i = 0; i < links_obj.length; i++) {\r\n            let item = links_obj[i]\r\n            let index = original_links_id.indexOf(item.id)\r\n            if (index >= 0) {\r\n                if (note.links[index].link === item.link) {\r\n                    old_links.push(item)\r\n                }\r\n                else {\r\n                    item.link_title = item.link\r\n                    new_links.push(item)\r\n                }\r\n            }\r\n            else {\r\n                item.link_title = item.link\r\n                new_links.push(item)\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            saving: true\r\n        })\r\n\r\n        const server = new ServerReq()\r\n\r\n        if (new_links.length === 0) {\r\n            note_obj.links = old_links\r\n\r\n            server\r\n                .update_note(note_obj, token)\r\n                .then(res => {\r\n                    this.setState({\r\n                        saving: false,\r\n                        success: true\r\n                    })\r\n                    change_current_note()\r\n                    setTimeout(() => this.props.history.push(routes.home), 1000)\r\n                })\r\n                .catch(err => show_err(err))\r\n        }\r\n        else {\r\n            get_data_from_links(new_links)\r\n                .then(links_res => {\r\n                    note_obj.links = [...links_res, ...old_links]\r\n\r\n                    return server.update_note(note_obj, token)\r\n                })\r\n                .then(res => {\r\n                    this.setState({\r\n                        saving: false,\r\n                        success: true\r\n                    })\r\n                    change_current_note()\r\n                    setTimeout(() => this.props.history.push(routes.home), 1000)\r\n                })\r\n                .catch(err => show_err(err))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const note = findNote(this.props.notes, this.props.match.params.route)\r\n        const links = get_state_links(note)\r\n        const formControl = this.state.formControl\r\n\r\n        this.setState({\r\n            note,\r\n            formControl: {\r\n                title: {\r\n                    ...formControl.title,\r\n                    value: note.title,\r\n                },\r\n                desc: {\r\n                    ...formControl.desc,\r\n                    value: note.desc,\r\n                },\r\n                links,\r\n            },\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { title, desc, links } = this.state.formControl\r\n        const { success, saving } = this.state\r\n        const { history, notes } = this.props\r\n\r\n        if (!notes.length) {\r\n            history.replace(routes.home)\r\n        }\r\n\r\n        if (saving || success) {\r\n            return <div className=\"note-create\">\r\n                {success && <StyledIcon fontSize='large' style={{ color: green[500] }} />}\r\n                {saving && <StyledProgress />}\r\n            </div>\r\n        }\r\n        return (\r\n            <Box padding={1} data-testid={'note-edit'} className='note-edit'>\r\n                <form>\r\n                    <Title title={title} callback={this.handleChange} />\r\n                    <Desc value={desc.value} callback={this.handleChange} />\r\n                    <Links createLink={this.createLink}\r\n                        links={links}\r\n                        handleChange={this.handleChange}\r\n                        deleteLink={this.deleteLink} />\r\n                    <Button data-testid={'btn-cancel'} onClick={this.goBack}>Cancel</Button>\r\n                    <Button data-testid={'btn-update'} onClick={this.submit} disabled={!this.state.formValid}>Update</Button>\r\n                    <Button data-testid={'btn-delete'} onClick={this.handleOpenModal} color='secondary'>{this.state.delete_spinner ? <CircularProgress size={20} /> : \"Delete Note\"}</Button>\r\n                    <Dialog\r\n                        data-testid={'edit-dialog'}\r\n                        open={this.state.open_modal}\r\n                        onClose={this.handleCloseModal}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{'Are you sure about that?'}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                {`You will delete note \"${this.state.note.title}\", all his childrens and links.`}.\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button data-testid={'btn-dialog-dis'} onClick={this.handleCloseModal} color=\"primary\">\r\n                                Disagree\r\n                            </Button>\r\n                            <Button data-testid={'btn-dialog-ag'} onClick={this.handleDeleteNote} color=\"primary\" autoFocus>\r\n                                Agree\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </form>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEdit)\r\n\r\nconst StyledProgress = styled(CircularProgress)({\r\n    marginLeft: 'calc(50% - 20px)'\r\n})\r\n\r\nconst StyledIcon = styled(CheckIcon)({\r\n    marginLeft: 'calc(50% - 20px)'\r\n})\r\n","import React, { Component } from 'react'\r\nimport {\r\n    AppBar, IconButton,\r\n    Toolbar, Button, Box,\r\n    Drawer, Hidden, Link, Typography\r\n} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { Menu } from '@material-ui/icons'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { routes } from '../routes'\r\nimport { change_current_note } from '../store/actions/data'\r\nimport { log_out_user } from '../store/actions/user'\r\nimport { Sidebar } from './NoteDisplay/Sidebar'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentMenu: state.note.currentMenu,\r\n    notes: state.note.notes,\r\n    user: state.user.userData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    change_current_note,\r\n    log_out_user\r\n}\r\n\r\nexport class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            drawer: false\r\n        }\r\n    }\r\n\r\n    handleDrawer = () => {\r\n        this.setState({\r\n            drawer: !this.state.drawer\r\n        })\r\n    }\r\n\r\n    logOut = () =>{\r\n        this.props.log_out_user()\r\n    }\r\n\r\n    renderUserInfoOrSignBtns = () => {\r\n        const userData = this.props.user\r\n        if (Object.keys(userData).length) {\r\n            return (\r\n                <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" flexGrow='1'>\r\n                    <Typography>{userData.username}</Typography>\r\n                    <Button onClick={this.logOut} color=\"inherit\">Sign Out</Button>\r\n                </Box>\r\n            )\r\n        }\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" flexGrow='1'>\r\n                <Button color=\"inherit\">\r\n                    <Link color='inherit' component={RouterLink} to={routes.sign_up}>\r\n                        Sign Up/In\r\n                    </Link>\r\n                </Button>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { notes, currentMenu, change_current_note } = this.props\r\n        return (\r\n            <Box>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Hidden mdUp>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleDrawer} aria-label=\"menu\">\r\n                                <Menu />\r\n                            </IconButton>\r\n                        </Hidden>\r\n                        {this.renderUserInfoOrSignBtns()}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Hidden mdUp>\r\n                    <Drawer open={this.state.drawer} onClose={this.handleDrawer}>\r\n                        <Box padding={2}>\r\n                            <Sidebar notes={notes} currentMenu={currentMenu} change_current_note={change_current_note} />\r\n                        </Box>\r\n                    </Drawer>\r\n                </Hidden>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React, { Component } from 'react'\r\nimport {\r\n    Box, TextField,\r\n    Button,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport { validate, validatePasswords, isFormValid } from '../../utils/validate'\r\nimport { ServerReq } from '../../webservice/ServerReq'\r\n\r\n\r\nexport class SignUpForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            formValid: false,\r\n            show_spinner: false,\r\n            formControls: {\r\n                user: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: {\r\n                        isValid: false,\r\n                        msg: []\r\n                    },\r\n                    validationRules: {\r\n                        isRequired: true,\r\n                        maxLen: 50\r\n                    }\r\n                },\r\n                pass1: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: {\r\n                        isValid: false,\r\n                        msg: []\r\n                    },\r\n                    validationRules: {\r\n                        isRequired: true,\r\n                    }\r\n                },\r\n                pass2: {\r\n                    value: '',\r\n                    touch: false,\r\n                    valid: {\r\n                        isValid: false,\r\n                        msg: []\r\n                    },\r\n                    validationRules: {\r\n                        isRequired: true,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        const formControls = {\r\n            ...this.state.formControls\r\n        }\r\n        const elem = {\r\n            ...formControls[name]\r\n        }\r\n\r\n        elem.value = value\r\n        elem.touch = true\r\n        elem.valid = validate(value, elem.validationRules)\r\n\r\n        if (name === 'pass1') {\r\n            let error_msg = 'This password don\\'t equal to first password'\r\n            if (formControls.pass2.value === value) {\r\n                formControls.pass2.valid = validate(formControls.pass2.value, formControls.pass2.validationRules)\r\n            }\r\n            else {\r\n                formControls.pass2.valid.isValid = false\r\n                if (!formControls.pass2.valid.msg.includes(error_msg) && formControls.pass2.touch) {\r\n                    formControls.pass2.valid.msg.push(error_msg)\r\n                }\r\n            }\r\n        }\r\n        if (name === 'pass2') {\r\n            elem.valid = validatePasswords(formControls.pass1.value, value, elem.valid)\r\n        }\r\n\r\n        formControls[name] = elem\r\n        let formValid = isFormValid(formControls)\r\n\r\n        this.setState({\r\n            formValid,\r\n            formControls\r\n        })\r\n    }\r\n\r\n    signUp = () => {\r\n        const server = new ServerReq()\r\n        const formControls = this.state.formControls\r\n        const show_err = this.props.show_err\r\n        const user = {\r\n            username: formControls.user.value,\r\n            pass: formControls.pass1.value\r\n        }\r\n\r\n        this.setState({show_spinner: true})\r\n\r\n        server\r\n            .sign_up(user)\r\n            .then(res => {\r\n                this.props.sign_up_user(res.data)\r\n            })\r\n            .catch(err => {\r\n                show_err(err);\r\n                this.setState({show_spinner: false})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { formValid, formControls, show_spinner } = this.state\r\n        const { user, pass1, pass2 } = formControls\r\n        return (\r\n            <form>\r\n                {renderTextField(user, 'user', 'Username', this.handleChange)}\r\n                {renderTextField(pass1, 'pass1', 'Password', this.handleChange, 'password')}\r\n                {renderTextField(pass2, 'pass2', 'Repeat password', this.handleChange, 'password')}\r\n                <Box marginTop='10px'>\r\n                    <Button disabled={!formValid} onClick={this.signUp}>\r\n                        {\r\n                            show_spinner\r\n                                ? <CircularProgress size={20} />\r\n                                : 'Sign Up'\r\n                        }\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction renderTextField(obj, name, label, handler, type = 'text') {\r\n    return <TextField error={!obj.valid.isValid && obj.touch}\r\n        helperText={obj.valid.msg.join(', ')}\r\n        required\r\n        value={obj.value}\r\n        fullWidth\r\n        name={name}\r\n        type={type}\r\n        label={label}\r\n        onChange={handler} />\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport { validate, isFormValid } from '../../utils/validate'\r\nimport { ServerReq } from '../../webservice/ServerReq'\r\n\r\nexport class SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            formValid: false,\r\n            show_spinner: false,\r\n            formControls: {\r\n                user: {\r\n                    value: \"\",\r\n                    touch: false,\r\n                    valid: {\r\n                        isValid: false,\r\n                        msg: []\r\n                    },\r\n                    validationRules: {\r\n                        isRequired: true\r\n                    }\r\n                },\r\n                pass: {\r\n                    value: \"\",\r\n                    touch: false,\r\n                    valid: {\r\n                        isValid: false,\r\n                        msg: []\r\n                    },\r\n                    validationRules: {\r\n                        isRequired: true\r\n                    }\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        const formControls = {\r\n            ...this.state.formControls\r\n        }\r\n        const element = {\r\n            ...formControls[name]\r\n        }\r\n\r\n        element.touch = true\r\n        element.value = value\r\n        element.valid = validate(value, element.validationRules)\r\n        formControls[name] = element\r\n        let formValid = isFormValid(formControls)\r\n\r\n        this.setState({\r\n            formValid,\r\n            formControls\r\n        })\r\n    }\r\n    \r\n    logIn = () => {\r\n        const server = new ServerReq()\r\n        const formControls = this.state.formControls\r\n        const show_err = this.props.show_err\r\n        const user = {\r\n            username: formControls.user.value,\r\n            pass: formControls.pass.value\r\n        }\r\n\r\n        this.setState({show_spinner: true})\r\n\r\n        server\r\n            .log_in(user)\r\n            .then(res => {\r\n                this.props.log_in_user(res.data)\r\n            })\r\n            .catch(err => {\r\n                show_err(err)\r\n                this.setState({show_spinner: false})\r\n            })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show_snack: false, error: '' })\r\n    }\r\n\r\n    render() {\r\n        const { formValid, formControls, show_spinner } = this.state\r\n        const { user, pass } = formControls\r\n        return (\r\n            <form>\r\n                {renderTextField(user, 'user', 'Username', this.handleChange)}\r\n                {renderTextField(pass, 'pass', 'Password', this.handleChange, 'password')}\r\n                <Box marginTop='10px'>\r\n                    <Button onClick={this.logIn} disabled={!formValid}>\r\n                        {\r\n                            show_spinner\r\n                            ?<CircularProgress size={20}/>\r\n                            :'Sign In'\r\n                        }\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction renderTextField(obj, name, label, handler, type = 'text') {\r\n    return <TextField error={!obj.valid.isValid && obj.touch}\r\n        helperText={obj.valid.msg.join(', ')}\r\n        required\r\n        value={obj.value}\r\n        fullWidth\r\n        name={name}\r\n        type={type}\r\n        label={label}\r\n        onChange={handler} />\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Box, Slide,\r\n    Button, Typography,\r\n} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { SignUpForm } from './SignUpForm'\r\nimport { SignInForm } from './SignInForm'\r\nimport { sign_up_user, log_in_user } from '../../store/actions/user'\r\nimport { show_err } from '../../store/actions/error'\r\nimport { routes } from '../../routes'\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    show_err,\r\n    sign_up_user,\r\n    log_in_user\r\n}\r\n\r\nexport class UserSign extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            sign_up: true,\r\n            sign_in: false,\r\n        }\r\n    }\r\n\r\n    renderButton() {\r\n        const { sign_up } = this.state\r\n        if (sign_up) {\r\n            return (\r\n                <Typography>Already have an account?\r\n                    <Button onClick={() => this.setState({ sign_up: false })}>\r\n                        Sign In\r\n                        </Button>\r\n                </Typography>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Typography>Don't have an account?\r\n                    <Button onClick={() => this.setState({ sign_in: false })}>\r\n                        Sign Up\r\n                        </Button>\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { sign_up, sign_in } = this.state\r\n        const { sign_up_user, log_in_user, show_err, user, history } = this.props\r\n\r\n        if (user.token) {\r\n            history.replace(routes.home) \r\n        }\r\n  \r\n        return (\r\n            <Box overflow='hidden'>\r\n                <Box width={'50%'} margin='0 auto'>\r\n                    <Slide direction=\"left\" in={sign_up} mountOnEnter unmountOnExit onExited={() => this.setState({ sign_in: true })}>\r\n                        <SignUpForm sign_up_user={sign_up_user} show_err={show_err}/>\r\n                    </Slide>\r\n                    <Slide direction=\"right\" in={sign_in} mountOnEnter unmountOnExit onExited={() => this.setState({ sign_up: true })}>\r\n                        <SignInForm log_in_user={log_in_user} show_err={show_err}/>\r\n                    </Slide>\r\n                    <Box>\r\n                        {this.renderButton()}\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSign)","import React from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nexport function ErrorAlert(props) {\r\n    const { open, msg, handleClose } = props\r\n    const snackProps = {\r\n        open,\r\n        autoHideDuration: 4000,\r\n        anchorOrigin: {\r\n            vertical: 'top',\r\n            horizontal: 'right'\r\n        },\r\n        onClose: handleClose\r\n    }\r\n    const alertProps = {\r\n        onClose: handleClose,\r\n        severity: props.saverity || \"error\"\r\n    }\r\n\r\n    return (\r\n        <Snackbar {...snackProps}>\r\n            <Alert {...alertProps}>\r\n                {msg}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Paper, Container, Box } from '@material-ui/core'\r\nimport { styled } from '@material-ui/styles'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport NoteCreate from './NoteCreate'\r\nimport NoteDisplay from './NoteDisplay/index'\r\nimport NoteEdit from './NoteEdit'\r\nimport { routes } from '../routes'\r\nimport Header from './Header'\r\nimport UserSign from './User/UserSign'\r\nimport { ErrorAlert } from './ErrorAlert'\r\nimport { hide_err } from '../store/actions/error'\r\n\r\nconst StyledPaper = styled(Paper)({\r\n    margin: '2.5% auto',\r\n})\r\n\r\nconst mapStateToProps = (state) =>({\r\n    token: state.user.token,\r\n    error: state.error\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    hide_err\r\n}\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const { token, hide_err,error } = this.props\r\n\r\n        if (!token) {\r\n            return (\r\n                <Box>\r\n                    <Header />\r\n                    <Container maxWidth={'md'}>\r\n                        <StyledPaper>\r\n                            <UserSign />\r\n                        </StyledPaper>\r\n                    </Container>\r\n                    <ErrorAlert handleClose={hide_err} msg={error.msg} open={error.show_err}/>\r\n                </Box>\r\n            )\r\n        }\r\n        return (\r\n            <Box>\r\n                <Header />\r\n                <Container maxWidth={'md'}>\r\n                    <StyledPaper>\r\n                        <Switch>\r\n                            <Route path={routes.home} exact component={NoteDisplay} />\r\n                            <Route path={routes.create} component={NoteCreate} />\r\n                            <Route path={routes.sign_up} component={UserSign} />\r\n                            <Route path={`${routes.edit}/:route`} component={NoteEdit} />\r\n                            <Redirect to={routes.home} />\r\n                        </Switch>\r\n                    </StyledPaper>\r\n                </Container>\r\n                <ErrorAlert handleClose={hide_err} msg={error.msg} open={error.show_err}/>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React from 'react';\r\nimport Main  from './components/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport { log_in_user } from './store/actions/user'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nif (!Promise.allSettled) {\r\n  Promise.allSettled = function (promises) {\r\n    return Promise.all(promises.map(p => Promise.resolve(p).then(value => ({\r\n      status: 'fulfilled',\r\n      value: value\r\n    }), error => ({\r\n      status: 'rejected',\r\n      reason: error\r\n    }))));\r\n  };\r\n}\r\n\r\nconst user = localStorage.getItem('user')\r\n\r\nif (user) {\r\n    store.dispatch(log_in_user(JSON.parse(user)))\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}